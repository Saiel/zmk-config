/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <150>;
    flavor = "hold-preferred";
    tapping-term-ms = <150>;
};

&mt {
    quick_tap_ms = <150>;
    tapping-term-ms = <150>;
};

/ {
    macros {
        tgl_lout: toggle_layout {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&sk LEFT_WIN>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LEFT_WIN>;

            label = "TOGGLE_LAYOUT";
        };
    };

    behaviors {
        lht: lht {
            compatible = "zmk,behavior-hold-tap";
            label = "Layer hold-tap";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };

        mt_inst: mt_inst {
            compatible = "zmk,behavior-hold-tap";
            label = "Mod-tap instant";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <150>;
            hold-while-undecided;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&tgl_lout  &kp TAB               &kp Q  &kp W                         &kp E     &kp R                      &kp T        &kp Y        &kp U           &kp I      &kp O                     &kp P     &kp LEFT_BRACKET     &mt LEFT_WIN RBKT
           &kp ESC               &kp A  &kp S                         &kp D     &kp F                      &kp G        &kp H        &kp J           &kp K      &kp L                     &kp SEMI  &kp SQT
           &mt_inst LCTRL GRAVE  &kp Z  &kp X                         &kp C     &kp V                      &kp B        &kp N        &kp M           &kp COMMA  &kp DOT                   &kp FSLH  &mt LEFT_SHIFT BSLH
                                        &mt_inst LEFT_ALT LEFT_ARROW  &lht 2 2  &mt_inst LEFT_SHIFT SPACE  &lt 1 RET    &lt 1 MINUS  &mt LCTRL BSPC  &lt 2 DEL  &mt LEFT_ALT RIGHT_ARROW
            >;
        };

        lower_layer {
            bindings = <
&trans  &kp GRAVE       &kp F1    &kp F2  &kp F3     &kp F4    &kp F5       &kp F6     &kp F7    &kp F8     &kp F9    &kp F10   &kp F11          &mt LEFT_WIN F12
        &mt LCTRL PLUS  &kp EXCL  &kp AT  &kp HASH   &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR   &kp LPAR  &kp RPAR  &mt RCTRL MINUS
        &mt LALT EQUAL  &kp N1    &kp N2  &kp N3     &kp N4    &kp N5       &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &trans
                                  &trans  &lt 3 TAB  &trans    &trans       &trans     &trans    &lt 3 DEL  &trans
            >;
        };

        raise_layer {
            bindings = <
&trans  &kp KP_NUM       &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS    &kp C_VOL_UP    &kp HOME        &kp END          &kp PG_UP  &kp SLCK         &kp CAPS         &trans
        &mt LCTRL EQUAL  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW     &kp RIGHT  &kp INS          &mt LCTRL K_APP
        &trans           &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT      &kp C_VOL_DN    &kp K_MUTE      &kp PRINTSCREEN  &kp PG_DN  &kp PAUSE_BREAK  &trans
                                          &trans     &trans     &trans     &lt 3 RET       &lt 3 ESC       &trans          &trans           &trans
            >;
        };

        adjust_layer {
            bindings = <
&bt BT_CLR_ALL  &bootloader  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4    &none         &none         &none         &none         &none         &bootloader  &none
                &bt BT_CLR   &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4     &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
                &sys_reset   &none          &none          &none          &out OUT_USB   &out OUT_BLE     &none         &none         &none         &none         &none         &sys_reset
                                            &none          &trans         &none          &trans           &trans        &none         &trans        &none
            >;
        };
    };
};
